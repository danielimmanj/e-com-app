input {
  file {
    # Ensure the path is correct and accessible
    path => "/home/daniel/Documents/logs/eCommerce/*.log"
    type => "eCommerce-logs"

    # Start reading from the beginning of the file
    start_position => "beginning"

    # Handle file rotation
    sincedb_path => "/dev/null"
  }
}

filter {
  # Extract the microservice name from the file path
  grok {
    match => { "path" => "/home/daniel/Documents/logs/eCommerce/%{GREEDYDATA:service_name}.log" }
  }

  # Parsing the log message structure
  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:loglevel} %{JAVACLASS:class} - %{GREEDYDATA:logmessage}"
    }
  }

  # Add custom fields to the logs
  mutate {
    add_field => { "app_name" => "eCommerce" }
    add_field => { "environment" => "production" }
  }

  # Convert the timestamp to a standard format
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "ecommerce-logs-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "elastic"
    ssl => false
    http_compression => true
  }
  stdout { codec => rubydebug }
}
