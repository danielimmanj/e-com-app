services:
  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - e-commerce

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - e-commerce

  # PostgreSQL Service for eCommerce
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: eCommerce
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - e-commerce

  # PostgreSQL Service for Keycloak (no port exposure)
  keycloak-postgres:
    image: postgres
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - e-commerce

  # Keycloak Service
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    container_name: keycloak
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - keycloak-postgres
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    networks:
      - e-commerce

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - e-commerce

  # Logstash Service
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.4
    container_name: logstash
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf --log.level debug
    environment:
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: elastic
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - /home/daniel/Documents/logs/eCommerce:/var/logs/eCommerce
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - e-commerce

  # Kibana Service
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic
    ports:
      - "5601:5601"
    networks:
      - e-commerce

  # Prometheus Service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - e-commerce

  # Grafana Service
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - e-commerce

  # PostgreSQL Exporter for eCommerce PostgreSQL
  postgres-exporter:
    image: bitnami/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@postgres:5433/eCommerce?sslmode=disable"
    ports:
      - "9187:9187"  # PostgreSQL Exporter port
    networks:
      - e-commerce
    depends_on:
      - postgres

networks:
  e-commerce:
    driver: bridge

volumes:
  esdata:
    driver: local
  postgres_data:
    driver: local
  keycloak_postgres_data:
    driver: local

