server:
  port: 8082 # API Gateway port

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: api-gateway
            client-secret: IQU3cSySrxWH611nd6JQ8g1WK9eIZfhh
            authorization-grant-type: client_credentials
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8081/realms/eCommerce
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/eCommerce  # Keycloak Realm URL
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/user-service
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderServiceCircuitBreaker
                fallbackUri: forward:/fallback/order-service

  resilience4j:
    circuitbreaker:
      instances:
        userServiceCircuitBreaker:
          sliding-window-size: 10
          minimum-number-of-calls: 5
          failure-rate-threshold: 50
          wait-duration-in-open-state: 10000
        orderServiceCircuitBreaker:
          sliding-window-size: 10
          minimum-number-of-calls: 5
          failure-rate-threshold: 50
          wait-duration-in-open-state: 10000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true